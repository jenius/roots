h3#ui ui
:markdown
  There are a variety of UI components I find myself using over and over which I've tried to abstract into flexible mixins here.

  **`area(color = #f5f5f5)`**    
  Light grey background, padding, and subtle inner shadow provide a nice box around some content. You can change the color, but don't get too crazy.

:markdown
  **`notice(width = false, color = #f5f5f5)`**    
  This is best used in notifications or flash messages, as will be seen below. This is the version that you can customize more - just a rectangular box with bold text and a light gradient in the background, intended for sitting at the top of the screen and notifying the user of something.

.notice look at me!

:markdown
  **`flash(type = notice)`**    
  This is a standard notice, but comes pre-populated with the four most common flavors. `notice`, `success`, `error`, and `warning`. Examples below.

.flash.notice hey, i have something to tell you
.flash.warning you'd better watch yourself son
.flash.error delete the logs! we've been breached!
.flash.success awwww yeaahhh - you won life!

:markdown
  **`breadcrumb(character = '/', spacing = 10px, divider-color = #cdcdcd)`**    
  Place this on a `ul` and it will create an inline list separated by the specified character. Nice for breadcrumb trails - example below.

.breadcrumbs
  ul
    li system
    li bin
    li roots
    li mixins
    li breadcrumb

:markdown
  **`bubble(pointer = left, color = #eee, width = false)`**    
  Creates a little speech bubble. Specify if you want the pointer on the `left`, `center`, or `right`, add a color, and set a width if you'd like. Very helpful, example below.

.bubble hey girl, check out my curves

:markdown
  **`figure(color = default, dimensions = false)`**    
  Place this on a figure element and it will nicely style an `img` and `figcaption` nested inside. Example below.

figure
  img(src='/img/zebra.jpg')
  figcaption a fine specimen of zebra. a fine specimen indeed.

:markdown
  **`nav(size = 1, color = #222, link-color = #fff, fixed = true)`**    
  Creates a standard navigation bar. The size parameter just scales everything up or down, the rest is self-explanitory. Make sure to put this mixin on a `nav` element with a  `ul` and/or `h1` inside for the navigation and title respetively. Click here to see an example.

  **``flash-notices()``**    
  This is a _root level mixin_ which adds the appropriate flash notification mixin to elements with the classes `.flash .error`, `.flash .success`, `.flash .notice`, or `.flash .warning`. Must have both of the classes. It will make sense once you start styling them.